{"ast":null,"code":"var _jsxFileName = \"/Users/lianli/Downloads/Robotics /LTL-Web-Demo/src/DemoPage.js\",\n  _s = $RefreshSig$();\nimport './DemoPage.css';\nimport { MapContainer, TileLayer } from 'react-leaflet';\nimport { useState } from 'react';\nimport { useRef } from 'react';\nimport 'leaflet/dist/leaflet.css';\n\n// Alerts localhost when button is clicked to convert--> may be useful for when we implement ltl \nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction clickMe() {\n  if (mapRef.current) {\n    var bounds = mapRef.getBounds();\n    var minLat = bounds.getSouthWest().lat;\n    var maxLat = bounds.getNorthEast().lat;\n    var minLon = bounds.getSouthWest().lng;\n    var maxLon = bounds.getNorthEast().lng;\n    alert('Convert has been clicked');\n  }\n}\n\n// Screen where the demo will be hosted\nfunction Demo() {\n  _s();\n  const [center, setCenter] = useState({\n    lat: 41.8268,\n    lng: -71.4025\n  });\n  const ZOOM_LEVEL = 16;\n  const mapRef = useRef();\n  const url = \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\";\n\n  // Implementing API/Logos\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"backround-color\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        fontSize: 20,\n        marginLeft: '2in',\n        marginTop: '1in'\n      },\n      children: \"Enter Natural Language Command:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        fontSize: 20,\n        marginLeft: '2in'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: clickMe,\n        children: \"Convert to LTL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        fontSize: 20,\n        marginLeft: '2in'\n      },\n      children: \"LTL Output:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      style: {\n        fontSize: 20,\n        marginLeft: '2in'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"space\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(MapContainer, {\n        center: center,\n        zoom: ZOOM_LEVEL,\n        ref: mapRef,\n        children: /*#__PURE__*/_jsxDEV(TileLayer, {\n          url: url\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(Demo, \"u4krqKoP/hlBo1NNW4RZOQ9rdOE=\");\n_c = Demo;\nexport default Demo;\nvar _c;\n$RefreshReg$(_c, \"Demo\");","map":{"version":3,"names":["MapContainer","TileLayer","useState","useRef","jsxDEV","_jsxDEV","clickMe","mapRef","current","bounds","getBounds","minLat","getSouthWest","lat","maxLat","getNorthEast","minLon","lng","maxLon","alert","Demo","_s","center","setCenter","ZOOM_LEVEL","url","className","children","style","fontSize","marginLeft","marginTop","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","zoom","ref","_c","$RefreshReg$"],"sources":["/Users/lianli/Downloads/Robotics /LTL-Web-Demo/src/DemoPage.js"],"sourcesContent":["import './DemoPage.css';\nimport { MapContainer, TileLayer } from 'react-leaflet';\nimport { useState } from 'react';\nimport { useRef } from 'react';\nimport 'leaflet/dist/leaflet.css';\n\n// Alerts localhost when button is clicked to convert--> may be useful for when we implement ltl \nfunction clickMe(){\n  if (mapRef.current){\n    var bounds = mapRef.getBounds();\n    var minLat = bounds.getSouthWest().lat;\n    var maxLat = bounds.getNorthEast().lat;\n    var minLon = bounds.getSouthWest().lng;\n    var maxLon = bounds.getNorthEast().lng;\n    alert('Convert has been clicked')}\n}\n\n// Screen where the demo will be hosted\nfunction Demo() {\n  const [center, setCenter] = useState({lat: 41.8268, lng: -71.4025})\n  const ZOOM_LEVEL = 16;\n  const mapRef = useRef()\n  const url =  \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\";\n\n// Implementing API/Logos\n  return (\n    <div className=\"backround-color\" >\n      <h1 style={{ fontSize: 20, marginLeft: '2in', marginTop: '1in'  }}>\n        Enter Natural Language Command:\n      </h1>\n     \n      <h2 style={{ fontSize: 20, marginLeft: '2in' }}>\n        <input type= \"text\"></input>\n        <button onClick={clickMe}>\n          Convert to LTL\n        </button>\n      </h2>\n\n      <h3 style={{ fontSize: 20, marginLeft: '2in'}}>\n        LTL Output: \n      </h3>\n\n      <h4 style={{ fontSize: 20, marginLeft: '2in'}}>\n        <input type= \"text\"></input>\n      </h4>\n\n      <space>\n      </space>\n    \n      <div>\n        <MapContainer center = {center} zoom= {ZOOM_LEVEL} ref = {mapRef}>\n            <TileLayer \n            url = {url} />\n        </MapContainer>\n      </div>\n   </div>  \n  );\n}\nexport default Demo;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}