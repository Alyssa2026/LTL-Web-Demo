{"ast":null,"code":"var _jsxFileName = \"/Users/lianli/Downloads/Robotics /LTL-Web-Demo/Client/src/DemoPage.js\",\n  _s = $RefreshSig$();\nimport './DemoPage.css';\nimport { MapContainer, TileLayer, Marker } from 'react-leaflet';\nimport { useEffect, useRef, useState } from 'react';\nimport 'leaflet/dist/leaflet.css';\nimport axios from 'axios';\n\n// Screen where the demo will be hosted\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Demo() {\n  _s();\n  // Getting the OSM API\n  const [center, setCenter] = useState({\n    lat: 41.8268,\n    lng: -71.4025\n  });\n  const ZOOM_LEVEL = 16;\n  const mapRef = useRef();\n  const url = \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\";\n\n  // When button is clicked, this will collect the user inputs, get the bounds, parse and filter the location selected\n  const [response, setResponse] = useState(''); // Record genProp output \n  const [userInputValue, setUserInputValue] = useState(''); // set up constant for user input\n  const [ltlServerResponse, setLTLServerResponse] = useState('');\n\n  // usereffect to update local storage\n  useEffect(() => {\n    const storedOut = JSON.parse(localStorage.getItem('server output')) || [];\n    storedOut.push(ltlServerResponse);\n    localStorage.setItem('server output', JSON.stringify(storedOut));\n    const storedIn = JSON.parse(localStorage.getItem('user input')) || [];\n    storedIn.push(userInputValue);\n    localStorage.setItem('user input', JSON.stringify(storedIn));\n  }, [userInputValue, ltlServerResponse]);\n  const clickMe = async () => {\n    // Get user input\n    const input = document.getElementById(\"textInput\").value;\n    setUserInputValue(input);\n    if (mapRef.current) {\n      // Get bounds of area displayed on the OSM map\n      const map = mapRef.current;\n      const bounds = map.getBounds();\n      const minLat = Number(bounds.getSouth());\n      const maxLat = Number(bounds.getNorth());\n      const minLng = Number(bounds.getWest());\n      const maxLng = Number(bounds.getEast());\n      const coord = {\n        minLat,\n        maxLat,\n        minLng,\n        maxLng\n      };\n      console.log(coord);\n      // Call servers required when button is clicked\n      try {\n        // Call genProp server to call genProp()\n        const response = await axios.post('http://localhost:5001/genProp', coord);\n        const responseData = response.data;\n        setResponse(responseData);\n\n        // Use the JSON file obtained in the first API call\n        const jsonFile = JSON.stringify(responseData);\n        console.log(responseData);\n        // LTLServer to call convertLTL(), passes in user input and JSON file of Propositions\n        const response2 = await axios.post('http://localhost:5002/convertLTL', {\n          input: userInputValue,\n          file: jsonFile\n        });\n        const responseData2 = response2.data;\n        setLTLServerResponse(responseData2);\n        console.log(responseData2);\n      } catch (error) {\n        console.error('Error:', error);\n      }\n      ;\n    }\n  };\n\n  // Implementing OSM API and creating demo page components \n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"backround-color\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        fontSize: 20,\n        marginLeft: '2in',\n        marginTop: '1in'\n      },\n      children: \"Enter Natural Language Command:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        fontSize: 20,\n        marginLeft: '2in'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"textInput\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: clickMe,\n        children: \"Convert to LTL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        fontSize: 20,\n        marginLeft: '2in'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      style: {\n        fontSize: 20,\n        marginLeft: '2in'\n      },\n      children: \"LTL Output:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        fontSize: 20,\n        marginLeft: '2in'\n      },\n      children: ltlServerResponse\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"space\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(MapContainer, {\n        center: center,\n        zoom: ZOOM_LEVEL,\n        ref: mapRef,\n        children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n          url: url\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Marker, {\n          position: [41.826409, -71.4026]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Marker, {\n          position: [41.82565, -71.4037]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_s(Demo, \"8UPH/+4soIZpGG5ufdeAUe4pnPw=\");\n_c = Demo;\nexport default Demo;\nvar _c;\n$RefreshReg$(_c, \"Demo\");","map":{"version":3,"names":["MapContainer","TileLayer","Marker","useEffect","useRef","useState","axios","jsxDEV","_jsxDEV","Demo","_s","center","setCenter","lat","lng","ZOOM_LEVEL","mapRef","url","response","setResponse","userInputValue","setUserInputValue","ltlServerResponse","setLTLServerResponse","storedOut","JSON","parse","localStorage","getItem","push","setItem","stringify","storedIn","clickMe","input","document","getElementById","value","current","map","bounds","getBounds","minLat","Number","getSouth","maxLat","getNorth","minLng","getWest","maxLng","getEast","coord","console","log","post","responseData","data","jsonFile","response2","file","responseData2","error","className","children","style","fontSize","marginLeft","marginTop","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onClick","zoom","ref","position","_c","$RefreshReg$"],"sources":["/Users/lianli/Downloads/Robotics /LTL-Web-Demo/Client/src/DemoPage.js"],"sourcesContent":["import './DemoPage.css';\nimport { MapContainer, TileLayer , Marker} from 'react-leaflet';\nimport { useEffect, useRef, useState} from 'react';\nimport 'leaflet/dist/leaflet.css';\nimport axios from 'axios'\n\n// Screen where the demo will be hosted\nfunction Demo() {\n  // Getting the OSM API\n  const [center, setCenter] = useState({lat: 41.8268, lng: -71.4025})\n  const ZOOM_LEVEL = 16;\n  const mapRef = useRef()\n  const url =  \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\";\n  \n  // When button is clicked, this will collect the user inputs, get the bounds, parse and filter the location selected\n  const [response, setResponse] = useState(''); // Record genProp output \n  const [userInputValue, setUserInputValue] = useState(''); // set up constant for user input\n  const [ltlServerResponse, setLTLServerResponse] = useState('');\n\n  // usereffect to update local storage\n  useEffect(() => {\n    const storedOut = JSON.parse(localStorage.getItem('server output')) || [];\n    storedOut.push(ltlServerResponse);\n    localStorage.setItem('server output', JSON.stringify(storedOut));\n\n    const storedIn = JSON.parse(localStorage.getItem('user input')) || [];\n    storedIn.push(userInputValue);\n    localStorage.setItem('user input', JSON.stringify(storedIn));\n  }, [userInputValue, ltlServerResponse]);\n  \n  const clickMe =async ()=>{\n  // Get user input\n  const input = document.getElementById(\"textInput\").value;\n  setUserInputValue(input);\n  if (mapRef.current) {\n      // Get bounds of area displayed on the OSM map\n      const map = mapRef.current;\n      const bounds = map.getBounds();\n      const minLat = Number(bounds.getSouth());\n      const maxLat = Number(bounds.getNorth());\n      const minLng = Number(bounds.getWest());\n      const maxLng = Number(bounds.getEast());\n\n      const coord = {minLat, maxLat, minLng, maxLng};\n      console.log(coord)\n      // Call servers required when button is clicked\n      try {\n         // Call genProp server to call genProp()\n        const response = await axios.post('http://localhost:5001/genProp', coord);\n        const responseData = response.data;\n        setResponse(responseData); \n\n         // Use the JSON file obtained in the first API call\n        const jsonFile = JSON.stringify(responseData);\n        console.log(responseData)\n        // LTLServer to call convertLTL(), passes in user input and JSON file of Propositions\n        const response2 = await axios.post('http://localhost:5002/convertLTL',  { input: userInputValue, file: jsonFile});\n        const responseData2 = response2.data;\n        setLTLServerResponse(responseData2);\n        console.log(responseData2);\n      } catch (error) {\n        console.error('Error:', error);\n      \n      };\n  }\n}\n\n// Implementing OSM API and creating demo page components \n  return (\n    <div className=\"backround-color\" >\n      <h1 style={{ fontSize: 20, marginLeft: '2in', marginTop: '1in'  }}>\n        Enter Natural Language Command:\n      </h1>\n     \n      <h2 style={{ fontSize: 20, marginLeft: '2in' }}>\n        <input type= \"text\" id=\"textInput\"></input>\n        <button onClick={clickMe}>\n          Convert to LTL\n        </button>\n      </h2>\n\n      <h3 style={{ fontSize: 20, marginLeft: '2in'}}>\n      </h3>\n\n      <h4 style={{ fontSize: 20, marginLeft: '2in'}}>\n         LTL Output:\n      </h4>\n      <h2 style={{ fontSize: 20, marginLeft: '2in' }}>\n        {ltlServerResponse}\n      </h2>\n      <space>\n      </space>\n    \n      <div>\n        <MapContainer center = {center} zoom= {ZOOM_LEVEL} ref = {mapRef}>\n            <TileLayer \n            url = {url} />\n            <Marker position={[41.826409, -71.4026]} />\n            <Marker position={[41.82565, -71.4037]} />\n        </MapContainer>\n      </div>\n   </div>  \n  );\n}\n\nexport default Demo;\n"],"mappings":";;AAAA,OAAO,gBAAgB;AACvB,SAASA,YAAY,EAAEC,SAAS,EAAGC,MAAM,QAAO,eAAe;AAC/D,SAASC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAO,OAAO;AAClD,OAAO,0BAA0B;AACjC,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd;EACA,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC;IAACQ,GAAG,EAAE,OAAO;IAAEC,GAAG,EAAE,CAAC;EAAO,CAAC,CAAC;EACnE,MAAMC,UAAU,GAAG,EAAE;EACrB,MAAMC,MAAM,GAAGZ,MAAM,CAAC,CAAC;EACvB,MAAMa,GAAG,GAAI,oDAAoD;;EAEjE;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACe,cAAc,EAAEC,iBAAiB,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC1D,MAAM,CAACiB,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;;EAE9D;EACAF,SAAS,CAAC,MAAM;IACd,MAAMqB,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC,CAAC,IAAI,EAAE;IACzEJ,SAAS,CAACK,IAAI,CAACP,iBAAiB,CAAC;IACjCK,YAAY,CAACG,OAAO,CAAC,eAAe,EAAEL,IAAI,CAACM,SAAS,CAACP,SAAS,CAAC,CAAC;IAEhE,MAAMQ,QAAQ,GAAGP,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,CAAC,IAAI,EAAE;IACrEI,QAAQ,CAACH,IAAI,CAACT,cAAc,CAAC;IAC7BO,YAAY,CAACG,OAAO,CAAC,YAAY,EAAEL,IAAI,CAACM,SAAS,CAACC,QAAQ,CAAC,CAAC;EAC9D,CAAC,EAAE,CAACZ,cAAc,EAAEE,iBAAiB,CAAC,CAAC;EAEvC,MAAMW,OAAO,GAAE,MAAAA,CAAA,KAAU;IACzB;IACA,MAAMC,KAAK,GAAGC,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAC,CAACC,KAAK;IACxDhB,iBAAiB,CAACa,KAAK,CAAC;IACxB,IAAIlB,MAAM,CAACsB,OAAO,EAAE;MAChB;MACA,MAAMC,GAAG,GAAGvB,MAAM,CAACsB,OAAO;MAC1B,MAAME,MAAM,GAAGD,GAAG,CAACE,SAAS,CAAC,CAAC;MAC9B,MAAMC,MAAM,GAAGC,MAAM,CAACH,MAAM,CAACI,QAAQ,CAAC,CAAC,CAAC;MACxC,MAAMC,MAAM,GAAGF,MAAM,CAACH,MAAM,CAACM,QAAQ,CAAC,CAAC,CAAC;MACxC,MAAMC,MAAM,GAAGJ,MAAM,CAACH,MAAM,CAACQ,OAAO,CAAC,CAAC,CAAC;MACvC,MAAMC,MAAM,GAAGN,MAAM,CAACH,MAAM,CAACU,OAAO,CAAC,CAAC,CAAC;MAEvC,MAAMC,KAAK,GAAG;QAACT,MAAM;QAAEG,MAAM;QAAEE,MAAM;QAAEE;MAAM,CAAC;MAC9CG,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MAClB;MACA,IAAI;QACD;QACD,MAAMjC,QAAQ,GAAG,MAAMZ,KAAK,CAACgD,IAAI,CAAC,+BAA+B,EAAEH,KAAK,CAAC;QACzE,MAAMI,YAAY,GAAGrC,QAAQ,CAACsC,IAAI;QAClCrC,WAAW,CAACoC,YAAY,CAAC;;QAExB;QACD,MAAME,QAAQ,GAAGhC,IAAI,CAACM,SAAS,CAACwB,YAAY,CAAC;QAC7CH,OAAO,CAACC,GAAG,CAACE,YAAY,CAAC;QACzB;QACA,MAAMG,SAAS,GAAG,MAAMpD,KAAK,CAACgD,IAAI,CAAC,kCAAkC,EAAG;UAAEpB,KAAK,EAAEd,cAAc;UAAEuC,IAAI,EAAEF;QAAQ,CAAC,CAAC;QACjH,MAAMG,aAAa,GAAGF,SAAS,CAACF,IAAI;QACpCjC,oBAAoB,CAACqC,aAAa,CAAC;QACnCR,OAAO,CAACC,GAAG,CAACO,aAAa,CAAC;MAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdT,OAAO,CAACS,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAEhC;MAAC;IACL;EACF,CAAC;;EAED;EACE,oBACErD,OAAA;IAAKsD,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9BvD,OAAA;MAAIwD,KAAK,EAAE;QAAEC,QAAQ,EAAE,EAAE;QAAEC,UAAU,EAAE,KAAK;QAAEC,SAAS,EAAE;MAAO,CAAE;MAAAJ,QAAA,EAAC;IAEnE;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEL/D,OAAA;MAAIwD,KAAK,EAAE;QAAEC,QAAQ,EAAE,EAAE;QAAEC,UAAU,EAAE;MAAM,CAAE;MAAAH,QAAA,gBAC7CvD,OAAA;QAAOgE,IAAI,EAAE,MAAM;QAACC,EAAE,EAAC;MAAW;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC3C/D,OAAA;QAAQkE,OAAO,EAAEzC,OAAQ;QAAA8B,QAAA,EAAC;MAE1B;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC,eAEL/D,OAAA;MAAIwD,KAAK,EAAE;QAAEC,QAAQ,EAAE,EAAE;QAAEC,UAAU,EAAE;MAAK;IAAE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC,eAEL/D,OAAA;MAAIwD,KAAK,EAAE;QAAEC,QAAQ,EAAE,EAAE;QAAEC,UAAU,EAAE;MAAK,CAAE;MAAAH,QAAA,EAAC;IAE/C;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACL/D,OAAA;MAAIwD,KAAK,EAAE;QAAEC,QAAQ,EAAE,EAAE;QAAEC,UAAU,EAAE;MAAM,CAAE;MAAAH,QAAA,EAC5CzC;IAAiB;MAAA8C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CAAC,eACL/D,OAAA;MAAA4D,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACO,CAAC,eAER/D,OAAA;MAAAuD,QAAA,eACEvD,OAAA,CAACR,YAAY;QAACW,MAAM,EAAIA,MAAO;QAACgE,IAAI,EAAG5D,UAAW;QAAC6D,GAAG,EAAI5D,MAAO;QAAA+C,QAAA,gBAC7DvD,OAAA,CAACP,SAAS;UACVgB,GAAG,EAAIA;QAAI;UAAAmD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACd/D,OAAA,CAACN,MAAM;UAAC2E,QAAQ,EAAE,CAAC,SAAS,EAAE,CAAC,OAAO;QAAE;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC3C/D,OAAA,CAACN,MAAM;UAAC2E,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,OAAO;QAAE;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAET;AAAC7D,EAAA,CAhGQD,IAAI;AAAAqE,EAAA,GAAJrE,IAAI;AAkGb,eAAeA,IAAI;AAAC,IAAAqE,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}